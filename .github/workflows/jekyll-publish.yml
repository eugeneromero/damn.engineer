name: Publish Jekyll site

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Replace development URL
        run: sed -i 's@http://127.0.0.1:4000@https://damn.engineer@' ${{ github.workspace }}/_config.yml

      - name: Build site
        run: |
          docker run \
          -v ${{ github.workspace }}:/srv/jekyll -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
          jekyll/builder:latest /bin/bash -c "chmod -R 777 /srv/jekyll && jekyll build --future"

      # - name: Download latest.json for comparison
      #   run: wget https://damn.engineer/latest.json -O ${{ github.workspace }}/current-latest.json

      # - name: Check if a new post has been created
      #   id: new-post-check
      #   uses: LouisBrunner/diff-action@v0.1.0
      #   with:
      #     old: ${{ github.workspace }}/current-latest.json
      #     new: ${{ github.workspace }}/_site/latest.json
      #     mode: addition
      #     tolerance: mixed

      - name: Deploy to Azure Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: upload
          app_location: ${{ github.workspace }}/_site
          skip_app_build: true
          output_location: ""

      # - name: Get new post info
      #   if: contains(steps.new-post-check.outputs.output, 'title')
      #   run: |
      #     title=$(jq -r '.title' ${{ github.workspace }}/_site/latest.json)
      #     url=$(jq -r '.url' ${{ github.workspace }}/_site/latest.json)
      #     echo "NEW_POST_TITLE=$title" >> $GITHUB_ENV
      #     echo "NEW_POST_URL=$url" >> $GITHUB_ENV

      # - name: Tweet new article
      #   uses: Eomm/why-don-t-you-tweet@v1
      #   if: contains(steps.new-post-check.outputs.output, 'title')
      #   with:
      #     tweet-message: "New post:\n${{ env.NEW_POST_TITLE }}\n${{ env.NEW_POST_URL }}\n#DevOps #Cloud #InfrastructureAsCode #CICD"
      #   env:
      #     TWITTER_CONSUMER_API_KEY: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
      #     TWITTER_CONSUMER_API_SECRET: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
      #     TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
      #     TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}

      # - name: Publish on LinkedIn through IFTTT
      #   uses: actionsflow/ifttt-webhook-action@v1
      #   if: contains(steps.new-post-check.outputs.output, 'title')
      #   with:
      #     event: new_damn_engineer_blog_post
      #     key: ${{ secrets.IFTTT_WEBHOOK_KEY }}
      #     value1: ${{ env.NEW_POST_TITLE }}
      #     value2: ${{ env.NEW_POST_URL }}



      # - name: Read the post
      #   id: post
      #   run: echo "::set-output name=data::$(cat ./content/post.md)"

      # - uses: infraway/medium-post-markdown@v1.5.0
      #   with:
      #     access_token: ${{ secrets.MEDIUM_ACCESS_TOKEN }}
      #     markdown: ${{ steps.post.outputs.data }}
